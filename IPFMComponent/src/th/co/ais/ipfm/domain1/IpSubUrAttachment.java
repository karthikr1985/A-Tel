package th.co.ais.ipfm.domain1;
// Generated 27 �.�. 2553, 17:13:55 by Hibernate Tools 3.2.1.GA


import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.Version;

import th.co.ais.ipfm.domain.MasterDomain;

/**
 * IpUrAttachment generated by hbm2java
 */
@Entity
@Table(name="IP_SUB_UR_ATTACHMENT")
public class IpSubUrAttachment  extends MasterDomain  implements java.io.Serializable,Cloneable {


     /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private IpSubUrAttachmentId id;
     private Long version;
     private String description;
     private String fileLocation;
     private String urStatus;
     private String subUrStatus;
     private String action;
     
     

    public IpSubUrAttachment() {
    }

	
    public IpSubUrAttachment(IpSubUrAttachmentId id) {
        this.id = id;
    }
    public IpSubUrAttachment(IpSubUrAttachmentId id, String description, String fileLocation, String createBy, Date createDate, String updateBy, Date updateDate) {
       this.id = id;
       this.description = description;
       this.fileLocation = fileLocation;
    }
   
     @EmbeddedId
    
    @AttributeOverrides( {
        @AttributeOverride(name="urNo", column=@Column(name="UR_NO", nullable=false, length=20) ),
        @AttributeOverride(name="subUrNo", column=@Column(name="SUB_UR_NO", nullable=false, length=10) ),
        @AttributeOverride(name="seq", column=@Column(name="SEQ", nullable=false, precision=22, scale=0) ), 
        @AttributeOverride(name="category", column=@Column(name="CATEGORY", nullable=false, length=20) ),
        @AttributeOverride(name="fileName", column=@Column(name="FILE_NAME", nullable=false, length=100) ) 
        
    } )
    public IpSubUrAttachmentId getId() {
        return this.id;
    }
    
    public void setId(IpSubUrAttachmentId id) {
        this.id = id;
    }
    @Version
    @Column(name="VERSION", precision=10, scale=0)
    public Long getVersion() {
        return this.version;
    }
    
    public void setVersion(Long version) {
        this.version = version;
    }
    
    @Column(name="DESCRIPTION", length=1000)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }
    
    @Column(name="FILE_LOCATION", length=200)
    public String getFileLocation() {
        return this.fileLocation;
    }
    
    public void setFileLocation(String fileLocation) {
        this.fileLocation = fileLocation;
    }
       
	@Column(name="CREATE_BY")
	public String getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Column(name="CREATE_DATE")
	public Date getCreated() {
		return created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Column(name="UPDATE_BY")
	public String getLastUpdBy() {
		return lastUpdBy;
	}

	public void setLastUpdBy(String lastUpdBy) {
		this.lastUpdBy = lastUpdBy;
	}
	
	@Column(name="UPDATE_DATE")
	public Date getLastUpd() {
		return lastUpd;
	}
	
	public void setLastUpd(Date lastUpd) {
		this.lastUpd = lastUpd;
	}
	
	@Column(name="UR_STATUS")
	public String getUrStatus() {
		return urStatus;
	}
	
	public void setUrStatus(String urStatus) {
		this.urStatus = urStatus;
	}
	
	@Column(name="SUB_UR_STATUS")
	public String getSubUrStatus() {
		return subUrStatus;
	}
	
	public void setSubUrStatus(String subUrStatus) {
		this.subUrStatus = subUrStatus;
	}
	
	@Column(name="ACTION")
	public String getAction() {
		return action;
	}
	
	public void setAction(String action) {
		this.action = action;
	}
	
	

	@Override
    public Object clone() throws CloneNotSupportedException
    {
		IpSubUrAttachment another = (IpSubUrAttachment) super.clone();
		another.setId((IpSubUrAttachmentId)getId().clone());
        return another;
    }

}


