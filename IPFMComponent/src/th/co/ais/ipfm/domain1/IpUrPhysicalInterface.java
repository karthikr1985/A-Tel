package th.co.ais.ipfm.domain1;
// Generated 27 �.�. 2553, 17:13:55 by Hibernate Tools 3.2.1.GA


import java.util.Comparator;
import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;

import org.hibernate.annotations.GenericGenerator;

import th.co.ais.ipfm.domain.MasterDomain;

/**
 * IpUrPhysicalInterface generated by hbm2java
 */
@Entity
@Table(name="IP_UR_PHYSICAL_INTERFACE"
    , uniqueConstraints = @UniqueConstraint(columnNames="ROW_ID") 
)
public class IpUrPhysicalInterface extends MasterDomain    implements java.io.Serializable, Cloneable {


	private IpUrPhysicalInterfaceId id;
	private String ipNode; 
	private String hostName; 
	private String macAddress;
	private String locationName; 
	private String floor;
	private String vlanId; 
	private String interfaceNodeId; 
	private String interfaceNodeDesc; 
	private String interfaceDesc;
	private String portStatusId; 
	private String portStatusDesc; 
	private String speedPortId; 
	private String speedPortDesc; 
	private String enclosure;
	private String reqRemarks;
	private String isAssign;
	private String isImpact;
	private String sysOwnerRemark; 
	private String pmRemark; 
	private String teamRemark; 
	private String actmRemark; 
	private String networkDevice; 
	private String networkLocationDesc; 
	private String networkFloor;
	private String networkPort; 
	private String networkRackName; 
    private IpUrStatus subUrStatus;
    private String subUrStatusTxt;
    private String urType; 
    private String rowId;
	private String changeType;
	private String isTnp;
	private String isApprove;
	private String isReject;
	private boolean isSelected;
    private Long version;
    private boolean impactSelected;
    private String trunkNo;
    private String piType;
    private int rowIndex;
    private String trunkFlag;
    
    @GeneratedValue(generator="system-uuid")
	@GenericGenerator(name="system-uuid", strategy = "uuid")
	@Column(name="ROW_ID", unique=true, length=50)
	public String getRowId() {
		return rowId;
	}

	public void setRowId(String rowId) {
		this.rowId = rowId;
	}

    @Version
    @Column(name="VERSION", precision=10, scale=0)
	public Long getVersion() {
		return version;
	}

	public void setVersion(Long version) {
		this.version = version;
	}

	@EmbeddedId
    @AttributeOverrides( {
        @AttributeOverride(name="urNo", column=@Column(name="UR_NO", nullable=false, length=20) ), 
        @AttributeOverride(name="subUrNo", column=@Column(name="SUB_UR_NO", nullable=false, length=10) ) } )
	public IpUrPhysicalInterfaceId getId() {
		return id;
	}

	public void setId(IpUrPhysicalInterfaceId id) {
		this.id = id;
	}
	@Column(name="IP_NODE", length=50)
	public String getIpNode() {
		return ipNode;
	}

	public void setIpNode(String ipNode) {
		this.ipNode = ipNode;
	}
	@Column(name="HOST_NAME", length=100)
	public String getHostName() {
		return hostName;
	}

	public void setHostName(String hostName) {
		this.hostName = hostName;
	}
	@Column(name="MAC_ADDRESS", length=100)
	public String getMacAddress() {
		return macAddress;
	}

	public void setMacAddress(String macAddress) {
		this.macAddress = macAddress;
	}
	@Column(name="LOCATION_NAME", length=200)
	public String getLocationName() {
		return locationName;
	}

	public void setLocationName(String locationName) {
		this.locationName = locationName;
	}
	@Column(name="FLOOR", length=10)
	public String getFloor() {
		return floor;
	}

	public void setFloor(String floor) {
		this.floor = floor;
	}
	@Column(name="VLAN_ID", length=100)
	public String getVlanId() {
		return vlanId;
	}

	public void setVlanId(String vlanId) {
		this.vlanId = vlanId;
	}
	@Column(name="INTERFACE_NODE_ID", length=100)
	public String getInterfaceNodeId() {
		return interfaceNodeId;
	}

	public void setInterfaceNodeId(String interfaceNodeId) {
		this.interfaceNodeId = interfaceNodeId;
	}
	@Column(name="INTERFACE_NODE_DESC", length=1000)
	public String getInterfaceNodeDesc() {
		return interfaceNodeDesc;
	}

	public void setInterfaceNodeDesc(String interfaceNodeDesc) {
		this.interfaceNodeDesc = interfaceNodeDesc;
	}
	@Column(name="INTERFACE_DESC", length=100)
	public String getInterfaceDesc() {
		return interfaceDesc;
	}

	public void setInterfaceDesc(String interfaceDesc) {
		this.interfaceDesc = interfaceDesc;
	}
	@Column(name="PORT_STATUS_ID", length=10)
	public String getPortStatusId() {
		return portStatusId;
	}

	public void setPortStatusId(String portStatusId) {
		this.portStatusId = portStatusId;
	}
	@Column(name="PORT_STATUS_DESC", length=1000)
	public String getPortStatusDesc() {
		return portStatusDesc;
	}

	public void setPortStatusDesc(String portStatusDesc) {
		this.portStatusDesc = portStatusDesc;
	}

	@Column(name="SPEED_PORT_ID", length=10)
	public String getSpeedPortId() {
		return speedPortId;
	}

	public void setSpeedPortId(String speedPortId) {
		this.speedPortId = speedPortId;
	}
	@Column(name="SPEED_PORT_DESC", length=1000)
	public String getSpeedPortDesc() {
		return speedPortDesc;
	}

	public void setSpeedPortDesc(String speedPortDesc) {
		this.speedPortDesc = speedPortDesc;
	}
	@Column(name="ENCLOSURE", length=10)
	public String getEnclosure() {
		return enclosure;
	}

	public void setEnclosure(String enclosure) {
		this.enclosure = enclosure;
	}
	@Column(name="REQ_REMARKS", length=1000)
	public String getReqRemarks() {
		return reqRemarks;
	}

	public void setReqRemarks(String reqRemarks) {
		this.reqRemarks = reqRemarks;
	}
	@Column(name="IS_ASSIGN", length=10)
	public String getIsAssign() {
		return isAssign;
	}

	public void setIsAssign(String isAssign) {
		this.isAssign = isAssign;
	}
	@Column(name="IS_IMPACT", length=10)
	public String getIsImpact() {
		return isImpact;
	}

	public void setIsImpact(String isImpact) {
		this.isImpact = isImpact;
	}
	@Column(name="SYS_OWNER_REMARK", length=1000)
	public String getSysOwnerRemark() {
		return sysOwnerRemark;
	}

	public void setSysOwnerRemark(String sysOwnerRemark) {
		this.sysOwnerRemark = sysOwnerRemark;
	}
	@Column(name="TEAM_REMARK", length=1000)
	public String getTeamRemark() {
		return teamRemark;
	}

	public void setTeamRemark(String teamRemark) {
		this.teamRemark = teamRemark;
	}

	@Column(name="PM_REMARK", length=1000)
	public String getPmRemark() {
		return pmRemark;
	}

	public void setPmRemark(String pmRemark) {
		this.pmRemark = pmRemark;
	}
	@Column(name="ACTM_REMARK", length=1000)
	public String getActmRemark() {
		return actmRemark;
	}

	public void setActmRemark(String actmRemark) {
		this.actmRemark = actmRemark;
	}
	@Column(name="NETWORK_DEVICE", length=100)
	public String getNetworkDevice() {
		return networkDevice;
	}

	public void setNetworkDevice(String networkDevice) {
		this.networkDevice = networkDevice;
	}
	@Column(name="NETWORK_LOCATION_DESC", length=1000)
	public String getNetworkLocationDesc() {
		return networkLocationDesc;
	}

	public void setNetworkLocationDesc(String networkLocationDesc) {
		this.networkLocationDesc = networkLocationDesc;
	}
	@Column(name="NETWORK_FLOOR", length=10)
	public String getNetworkFloor() {
		return networkFloor;
	}

	public void setNetworkFloor(String networkFloor) {
		this.networkFloor = networkFloor;
	}
	@Column(name="NETWORK_PORT", length=10)
	public String getNetworkPort() {
		return networkPort;
	}

	public void setNetworkPort(String networkPort) {
		this.networkPort = networkPort;
	}
	@Column(name="NETWORK_RACK_NAME", length=100)
	public String getNetworkRackName() {
		return networkRackName;
	}

	public void setNetworkRackName(String networkRackName) {
		this.networkRackName = networkRackName;
	}
	
	@ManyToOne(optional = false, fetch = FetchType.LAZY)
    @JoinColumns( {
    	@JoinColumn(name = "SUB_UR_STATUS", referencedColumnName = "SUB_UR_STATUS_ID", nullable = true, insertable=false, updatable=false),
    	@JoinColumn(name = "UR_TYPE", referencedColumnName = "UR_TYPE" , nullable = true, insertable=false, updatable=false)
    })
	public IpUrStatus getSubUrStatus() {
		return subUrStatus;
	}

	public void setSubUrStatus(IpUrStatus subUrStatus) {
		this.subUrStatus = subUrStatus;
	}
	@Column(name="UR_TYPE", length=5)
	public String getUrType() {
		return urType;
	}

	public void setUrType(String urType) {
		this.urType = urType;
	}
	
	@Column(name="SUB_UR_STATUS", length=20)
	public String getSubUrStatusTxt() {
		return subUrStatusTxt;
	}

	public void setSubUrStatusTxt(String subUrStatusTxt) {
		this.subUrStatusTxt = subUrStatusTxt;
	}
	@Transient
	public String getIsApprove() {
		return isApprove;
	}

	public void setIsApprove(String isApprove) {
		this.isApprove = isApprove;
	}
	@Transient
	public String getIsReject() {
		return isReject;
	}

	public void setIsReject(String isReject) {
		this.isReject = isReject;
	}
	
	@Transient
	public boolean getIsSelected() {
		return isSelected;
	}

	public void setIsSelected(boolean isSelected) {
		this.isSelected = isSelected;
	}
	
	@Column(name="CHANGE_TYPE", length=2)
	public String getChangeType() {
		return changeType;
	}

	public void setChangeType(String changeType) {
		this.changeType = changeType;
	}

	public void setSelected(boolean isSelected) {
		this.isSelected = isSelected;
	}
	
	@Column(name="IS_TNP", length=2)
	public String getIsTnp() {
		return isTnp;
	}

	public void setIsTnp(String isTnp) {
		this.isTnp = isTnp;
	}

    @Column(name="CREATE_BY")
	public String getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Column(name="CREATE_DATE")
	public Date getCreated() {
		return created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Column(name="UPDATE_BY")
	public String getLastUpdBy() {
		return lastUpdBy;
	}

	public void setLastUpdBy(String lastUpdBy) {
		this.lastUpdBy = lastUpdBy;
	}
		
	@Column(name="UPDATE_DATE")
	public Date getLastUpd() {
		return lastUpd;
	}
		
	public void setLastUpd(Date lastUpd) {
		this.lastUpd = lastUpd;
	}
	
//	@Transient
//	public boolean isImpactSelected() {
//		if (getIsImpact()==null || getIsImpact().equalsIgnoreCase("N"))
//			return false;
//		else
//			return true;
//	}
	@Transient
	public boolean isImpactSelected() {
		return impactSelected;
	}
    public void setImpactSelected(boolean impactSelected) {
		this.impactSelected = impactSelected;
	}

	@Override
    public Object clone() throws CloneNotSupportedException
    {
    	IpUrPhysicalInterface another = (IpUrPhysicalInterface) super.clone();
        //? take care of any deep copies to be made here
        return another;
    }

	@Column(name="TRUNK_NO")
	public String getTrunkNo() {
		return trunkNo;
	}

	public void setTrunkNo(String trunkNo) {
		this.trunkNo = trunkNo;
	}

	@Column(name="PI_TYPE")
	public String getPiType() {
		return piType;
	}

	public void setPiType(String piType) {
		this.piType = piType;
	}

	@Transient
	public int getRowIndex() {
		return rowIndex;
	}

	public void setRowIndex(int rowIndex) {
		this.rowIndex = rowIndex;
	}

	@Column(name="TRUNK_FLAG")
	public String getTrunkFlag() {
		return trunkFlag;
	}

	public void setTrunkFlag(String trunkFlag) {
		this.trunkFlag = trunkFlag;
	}

	@Transient
    public static Comparator<IpUrPhysicalInterface> piTrunkNoComparator = new Comparator<IpUrPhysicalInterface>() {
    	public int compare(IpUrPhysicalInterface s1, IpUrPhysicalInterface s2) {
			   String trunkNo1 = (s1.getTrunkNo()!= null)?s1.getTrunkNo().toUpperCase():"";
			   String trunkNo2 = (s2.getTrunkNo()!= null)?s2.getTrunkNo().toUpperCase():"";
	
			   //ascending order
			   return trunkNo1.compareTo(trunkNo2);
	    		
	
			   //descending order
			   //return StudentName2.compareTo(StudentName1);
	}};

}


