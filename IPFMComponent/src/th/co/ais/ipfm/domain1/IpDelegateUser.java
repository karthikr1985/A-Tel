package th.co.ais.ipfm.domain1;
// Generated 8 µ.¤. 2553, 16:51:31 by Hibernate Tools 3.2.1.GA


import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;

import th.co.ais.ipfm.domain.MasterDomain;

/**
 * IpDelegateUser generated by hbm2java
 */
@Entity
@Table(name="IP_DELEGATE_USER"
    , uniqueConstraints = @UniqueConstraint(columnNames="ROW_ID") 
)
public class IpDelegateUser extends MasterDomain  implements java.io.Serializable {


     private IpDelegateUserId id;
     private Long version;
     private Date startDate;
     private Date endDate;
     private String rowId;
     private IpUser delegateUser;
     private String userName;

    public IpDelegateUser() {
    }

    public IpDelegateUser(IpDelegateUserId id) {
        this.id = id;
    }
    public IpDelegateUser(IpDelegateUserId id, Date startDate, Date endDate, String createBy, Date createDate, String updateBy, Date updateDate, String rowId) {
       this.id = id;
       this.startDate = startDate;
       this.endDate = endDate;
    }
   
    @EmbeddedId
    @AttributeOverrides( {
        @AttributeOverride(name="userId", column=@Column(name="USER_ID", nullable=false, length=20) ), 
        @AttributeOverride(name="delegateUserId", column=@Column(name="DELEGATE_USER_ID", nullable=false, length=20) )} )
      
    public IpDelegateUserId getId() {
        return this.id;
    }
    
    public void setId(IpDelegateUserId id) {
        this.id = id;
    }
    @Version
    @Column(name="VERSION", precision=10, scale=0)
    public Long getVersion() {
        return this.version;
    }
    
    public void setVersion(Long version) {
        this.version = version;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="START_DATE", length=7)
    public Date getStartDate() {
        return this.startDate;
    }
    
    public void setStartDate(Date startDate) {
        this.startDate = startDate;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="END_DATE", length=7)
    public Date getEndDate() {
        return this.endDate;
    }
    
    public void setEndDate(Date endDate) {
        this.endDate = endDate;
    }

	@Column(name="CREATE_BY")
	public String getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Column(name="CREATE_DATE")
	public Date getCreated() {
		return created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Column(name="UPDATE_BY")
	public String getLastUpdBy() {
		return lastUpdBy;
	}

	public void setLastUpdBy(String lastUpdBy) {
		this.lastUpdBy = lastUpdBy;
	}
	
	@Column(name="UPDATE_DATE")
	public Date getLastUpd() {
		return lastUpd;
	}
	
	public void setLastUpd(Date lastUpd) {
		this.lastUpd = lastUpd;
	}
    

	@Column(name="ROW_ID")
    public String getRowId() {
		return rowId;
	}

	public void setRowId(String rowId) {
		this.rowId = rowId;
	}

	@Transient
	public String getUserName() {
		return userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	@ManyToOne(optional = false, fetch = FetchType.LAZY)
    @JoinColumn(name = "DELEGATE_USER_ID", referencedColumnName = "USER_ID", nullable = true, insertable=false,updatable=false)
    public IpUser getDelegateUser() {
		return delegateUser;
	}

	public void setDelegateUser(IpUser delegateUser) {
		this.delegateUser = delegateUser;
	}
}


